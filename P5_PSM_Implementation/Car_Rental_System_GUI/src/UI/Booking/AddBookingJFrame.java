/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package UI.Booking;

import UI.DatabaseConnection;
import javax.swing.*;
import java.sql.*;
import java.time.LocalDate;

/**
 *
 * @author AnjanaSruthiR
 */
public class AddBookingJFrame extends javax.swing.JFrame {

    private final ManageBookingsJFrame parent;

    /**
     * Creates new form AddBookingJFrame
     */
    public AddBookingJFrame(ManageBookingsJFrame parent) {
        initComponents();
        this.parent = parent;
        loadVehicles();
        loadEmployees();
        loadCustomers();
        loadInsurances();
        TxtBookingDate.setText(LocalDate.now().toString()); // Set today's date    
    }

    private void loadVehicles() {
        try (Connection conn = DatabaseConnection.getConnection(); PreparedStatement stmt = conn.prepareStatement("SELECT Vehicle_ID, Vehicle_Brand, Vehicle_Model FROM Vehicle WHERE Vehicle_ID NOT IN (SELECT Vehicle_ID FROM Booking WHERE BookingStatus IN ('Pending', 'Confirmed'))"); ResultSet rs = stmt.executeQuery()) {
            CmbVehicleID.addItem("Select--");
            while (rs.next()) {
                CmbVehicleID.addItem(rs.getInt("Vehicle_ID") + " - " + rs.getString("Vehicle_Brand") + " " + rs.getString("Vehicle_Model"));
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error loading vehicles: " + e.getMessage());
        }
    }

    private void loadCustomers() {
        try (Connection conn = DatabaseConnection.getConnection(); PreparedStatement stmt = conn.prepareStatement("SELECT Customer_PersonID, CONCAT(FirstName, ' ', LastName) AS CustomerName FROM Customer JOIN Person ON Customer_PersonID = PersonID"); ResultSet rs = stmt.executeQuery()) {
            CmbCustomerID.addItem("Select--");
            while (rs.next()) {
                CmbCustomerID.addItem(rs.getInt("Customer_PersonID") + " - " + rs.getString("CustomerName"));
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error loading customers: " + e.getMessage());
        }
    }

    private void loadEmployees() {
        try (Connection conn = DatabaseConnection.getConnection(); PreparedStatement stmt = conn.prepareStatement("SELECT Employee_PersonID, CONCAT(FirstName, ' ', LastName) AS EmployeeName FROM Employee JOIN Person ON Employee_PersonID = PersonID"); ResultSet rs = stmt.executeQuery()) {
            CmbEmployeeID.addItem("Select--");
            while (rs.next()) {
                CmbEmployeeID.addItem(rs.getInt("Employee_PersonID") + " - " + rs.getString("EmployeeName"));
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error loading employees: " + e.getMessage());
        }
    }

    private void loadInsurances() {
        try (Connection conn = DatabaseConnection.getConnection(); PreparedStatement stmt = conn.prepareStatement("SELECT Insurance_ID, Insurance_Provider FROM Insurance"); ResultSet rs = stmt.executeQuery()) {
            CmbInsuranceID.addItem("Select--");
            while (rs.next()) {
                CmbInsuranceID.addItem(rs.getInt("Insurance_ID") + " - " + rs.getString("Insurance_Provider"));
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error loading insurances: " + e.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        BtnBack = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        TxtBookingDate = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        CmbVehicleID = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        TxtStartDate = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        TxtEndDate = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        TxtTotalAmount = new javax.swing.JTextField();
        BtnSave = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        CmbCustomerID = new javax.swing.JComboBox<>();
        jLabel13 = new javax.swing.JLabel();
        CmbInsuranceID = new javax.swing.JComboBox<>();
        jLabel14 = new javax.swing.JLabel();
        CmbEmployeeID = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        BtnBack.setText("<- Back");
        BtnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnBackActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("Add Booking details");

        jLabel1.setText("Booking Date");

        TxtBookingDate.setEditable(false);

        jLabel9.setText("Vehicle ID");

        jLabel3.setText("Start Date (yyyy-mm-dd)");

        jLabel4.setText("End Date (yyyy-mm-dd)");

        jLabel11.setText("Total Amount");

        BtnSave.setText("Save");
        BtnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnSaveActionPerformed(evt);
            }
        });

        jLabel10.setText("Customer ID");

        jLabel13.setText("Insurance ID");

        jLabel14.setText("Employee ID");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(351, 351, 351)
                                .addComponent(BtnSave))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(BtnBack)
                                .addGap(153, 153, 153)
                                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 339, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(241, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addGap(44, 44, 44)
                                .addComponent(TxtTotalAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(44, 44, 44)
                                .addComponent(TxtBookingDate, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(44, 44, 44)
                                .addComponent(TxtStartDate, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(44, 44, 44)
                                .addComponent(TxtEndDate, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel10)
                                    .addComponent(jLabel9))
                                .addGap(44, 44, 44)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(CmbVehicleID, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(CmbCustomerID, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel13)
                                .addGap(44, 44, 44)
                                .addComponent(CmbInsuranceID, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel14)
                                .addGap(44, 44, 44)
                                .addComponent(CmbEmployeeID, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(62, 62, 62))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BtnBack)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(TxtBookingDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(CmbEmployeeID)
                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(TxtStartDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(TxtEndDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(CmbCustomerID)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(CmbVehicleID)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel11)
                        .addComponent(TxtTotalAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(CmbInsuranceID)
                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(96, 96, 96)
                .addComponent(BtnSave)
                .addContainerGap(268, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BtnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnBackActionPerformed
        this.dispose();
        parent.setVisible(true);
        // TODO add your handling code here:
    }//GEN-LAST:event_BtnBackActionPerformed

    private void BtnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnSaveActionPerformed
        try (Connection conn = DatabaseConnection.getConnection()) {
            String bookingDate = TxtBookingDate.getText();
            String startDate = TxtStartDate.getText();
            String endDate = TxtEndDate.getText();
            String vehicle = (String) CmbVehicleID.getSelectedItem();
            String customer = (String) CmbCustomerID.getSelectedItem();
            String employee = (String) CmbEmployeeID.getSelectedItem();
            String insurance = (String) CmbInsuranceID.getSelectedItem();
            String totalAmountText = TxtTotalAmount.getText();

            if (vehicle.equals("Select--") || customer.equals("Select--") || employee.equals("Select--") || insurance.equals("Select--") || totalAmountText.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Please fill all fields and select valid options.");
                return;
            }

            int customerID = Integer.parseInt(customer.split(" - ")[0]);
            int vehicleID = Integer.parseInt(vehicle.split(" - ")[0]);
            int employeeID = Integer.parseInt(employee.split(" - ")[0]);
            int insuranceID = Integer.parseInt(insurance.split(" - ")[0]);
            double totalAmount = Double.parseDouble(totalAmountText);

            LocalDate start = LocalDate.parse(startDate);
            LocalDate end = LocalDate.parse(endDate);
            if (end.isBefore(start)) {
                JOptionPane.showMessageDialog(this, "End Date must be after Start Date.");
                return;
            }

            String query = "INSERT INTO Booking (BookingDate, StartDate, EndDate, TotalAmount, BookingStatus, EmployeeID, CustomerID, Vehicle_ID, Insurance_ID) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)";
            try (PreparedStatement stmt = conn.prepareStatement(query)) {
                stmt.setDate(1, java.sql.Date.valueOf(bookingDate));
                stmt.setDate(2, java.sql.Date.valueOf(startDate));
                stmt.setDate(3, java.sql.Date.valueOf(endDate));
                stmt.setDouble(4, totalAmount);
                stmt.setString(5, "Pending");
                stmt.setInt(6, employeeID);
                stmt.setInt(7, customerID);
                stmt.setInt(8, vehicleID);
                stmt.setInt(9, insuranceID);

                stmt.executeUpdate();
                JOptionPane.showMessageDialog(this, "Booking added successfully.");
                parent.loadBookingData();
                this.dispose();
                parent.setVisible(true);
            }
        } catch (SQLException | NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Error saving booking: " + e.getMessage());
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_BtnSaveActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddBookingJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddBookingJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddBookingJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddBookingJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new AddBookingJFrame(null).setVisible(true));

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnBack;
    private javax.swing.JButton BtnSave;
    private javax.swing.JComboBox<String> CmbCustomerID;
    private javax.swing.JComboBox<String> CmbEmployeeID;
    private javax.swing.JComboBox<String> CmbInsuranceID;
    private javax.swing.JComboBox<String> CmbVehicleID;
    private javax.swing.JTextField TxtBookingDate;
    private javax.swing.JTextField TxtEndDate;
    private javax.swing.JTextField TxtStartDate;
    private javax.swing.JTextField TxtTotalAmount;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel9;
    // End of variables declaration//GEN-END:variables
}
