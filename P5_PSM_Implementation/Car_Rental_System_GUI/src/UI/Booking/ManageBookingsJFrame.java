/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package UI.Booking;

import UI.DatabaseConnection;
import UI.MainMenuJFrame;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.sql.*;

/**
 *
 * @author AnjanaSruthiR
 */
public class ManageBookingsJFrame extends javax.swing.JFrame {

    private final MainMenuJFrame parent;

    /**
     * Creates new form ManageBookingsJFrame
     */
    public ManageBookingsJFrame(MainMenuJFrame parent) {
        initComponents();
        this.parent = parent;
        loadBookingData();
    }

    public void loadBookingData() {
        DefaultTableModel model = (DefaultTableModel) TblBookings.getModel();
        model.setRowCount(0); // Clear existing rows

        String query = "SELECT BookingID, BookingDate, StartDate, EndDate, TotalAmount, BookingStatus FROM Booking";

        try (Connection conn = DatabaseConnection.getConnection(); PreparedStatement stmt = conn.prepareStatement(query); ResultSet rs = stmt.executeQuery()) {

            while (rs.next()) {
                model.addRow(new Object[]{
                    rs.getInt("BookingID"),
                    rs.getDate("BookingDate"),
                    rs.getDate("StartDate"),
                    rs.getDate("EndDate"),
                    rs.getDouble("TotalAmount"),
                    rs.getString("BookingStatus")
                });
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error loading booking data: " + e.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        BtnBack = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        BtnAdd = new javax.swing.JButton();
        BtnEdit = new javax.swing.JButton();
        BtnDelete = new javax.swing.JButton();
        BtnDetails = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        TblBookings = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        BtnBack.setText("<-Back");
        BtnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnBackActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Manage Bookings");

        BtnAdd.setText("Add");
        BtnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnAddActionPerformed(evt);
            }
        });

        BtnEdit.setText("Edit");
        BtnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnEditActionPerformed(evt);
            }
        });

        BtnDelete.setText("Delete");
        BtnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnDeleteActionPerformed(evt);
            }
        });

        BtnDetails.setText("Additional Details");
        BtnDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnDetailsActionPerformed(evt);
            }
        });

        TblBookings.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Booking ID", "Booking date", "Start Date", "End Date", "Total Amount", "Status"
            }
        ));
        jScrollPane1.setViewportView(TblBookings);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(BtnAdd)
                .addGap(18, 18, 18)
                .addComponent(BtnEdit)
                .addGap(18, 18, 18)
                .addComponent(BtnDelete)
                .addGap(18, 18, 18)
                .addComponent(BtnDetails)
                .addGap(53, 53, 53))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(95, 95, 95)
                        .addComponent(BtnBack)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 521, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 879, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BtnBack))
                .addGap(77, 77, 77)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 396, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BtnDetails)
                    .addComponent(BtnDelete)
                    .addComponent(BtnEdit)
                    .addComponent(BtnAdd))
                .addGap(115, 115, 115))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BtnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnBackActionPerformed
        this.dispose();
        if (parent != null) {
            parent.setVisible(true);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_BtnBackActionPerformed

    private void BtnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnAddActionPerformed
        AddBookingJFrame addBookingFrame = new AddBookingJFrame(this);
        addBookingFrame.setVisible(true);
        this.setVisible(false);
        // TODO add your handling code here:
    }//GEN-LAST:event_BtnAddActionPerformed

    private void BtnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnEditActionPerformed
        int selectedRow = TblBookings.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Please select a booking to edit.");
            return;
        }

        Object value = TblBookings.getValueAt(selectedRow, 0);
        if (value == null || !(value instanceof Integer)) {
            JOptionPane.showMessageDialog(this, "Invalid booking ID selected.");
            return;
        }
        int bookingID = (int) value;

        EditBookingJFrame editBookingFrame = new EditBookingJFrame(this, bookingID);
        editBookingFrame.setVisible(true);
        this.setVisible(false);
        // TODO add your handling code here:
    }//GEN-LAST:event_BtnEditActionPerformed

    private void BtnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnDeleteActionPerformed
        int selectedRow = TblBookings.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Please select a booking to delete.");
            return;
        }

        int confirm = JOptionPane.showConfirmDialog(this, "Are you sure you want to delete this booking?", "Confirm Deletion", JOptionPane.YES_NO_OPTION);

        if (confirm == JOptionPane.YES_OPTION) {
            Object value = TblBookings.getValueAt(selectedRow, 0);
            if (value == null || !(value instanceof Integer)) {
                JOptionPane.showMessageDialog(this, "Invalid booking ID selected.");
                return;
            }
            int bookingID = (int) value;

            try (Connection conn = DatabaseConnection.getConnection(); PreparedStatement stmt = conn.prepareStatement("DELETE FROM Booking WHERE BookingID = ?")) {
                stmt.setInt(1, bookingID);
                int rowsAffected = stmt.executeUpdate();

                if (rowsAffected > 0) {
                    JOptionPane.showMessageDialog(this, "Booking deleted successfully.");
                    loadBookingData();
                } else {
                    JOptionPane.showMessageDialog(this, "Error: Booking could not be deleted.");
                }
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(this, "Error deleting booking: " + e.getMessage());
            }
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_BtnDeleteActionPerformed

    private void BtnDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnDetailsActionPerformed
        int selectedRow = TblBookings.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Please select a booking to view details.");
            return;
        }

        Object value = TblBookings.getValueAt(selectedRow, 0);
        if (value == null || !(value instanceof Integer)) {
            JOptionPane.showMessageDialog(this, "Invalid booking ID selected.");
            return;
        }
        int bookingID = (int) value;

        String query = "SELECT B.BookingID, B.BookingDate, B.StartDate, B.EndDate, B.TotalAmount, B.BookingStatus, "
                + "C.FirstName AS CustomerFirstName, C.LastName AS CustomerLastName, "
                + "E.FirstName AS EmployeeFirstName, E.LastName AS EmployeeLastName, "
                + "I.Insurance_Provider, V.Vehicle_Brand, V.Vehicle_Model, V.Licence_Plate "
                + "FROM Booking B "
                + "JOIN Customer CU ON B.CustomerID = CU.Customer_PersonID "
                + "JOIN Person C ON CU.Customer_PersonID = C.PersonID "
                + "JOIN Employee EM ON B.EmployeeID = EM.Employee_PersonID "
                + "JOIN Person E ON EM.Employee_PersonID = E.PersonID "
                + "JOIN Insurance I ON B.Insurance_ID = I.Insurance_ID "
                + "JOIN Vehicle V ON B.Vehicle_ID = V.Vehicle_ID "
                + "WHERE B.BookingID = ?";

        try (Connection conn = DatabaseConnection.getConnection(); PreparedStatement stmt = conn.prepareStatement(query)) {
            stmt.setInt(1, bookingID);
            ResultSet rs = stmt.executeQuery();

            if (rs.next()) {
                String details = String.format(
                        "<html><body>"
                        + "<b>Booking ID:</b> %d<br>"
                        + "<b>Booking Date:</b> %s<br>"
                        + "<b>Start Date:</b> %s<br>"
                        + "<b>End Date:</b> %s<br>"
                        + "<b>Total Amount:</b> %.2f<br>"
                        + "<b>Status:</b> %s<br><br>"
                        + "<b>Customer:</b> %s %s<br>"
                        + "<b>Employee:</b> %s %s<br>"
                        + "<b>Insurance Provider:</b> %s<br>"
                        + "<b>Vehicle:</b> %s %s (%s)<br>"
                        + "</body></html>",
                        rs.getInt("BookingID"),
                        rs.getDate("BookingDate"),
                        rs.getDate("StartDate"),
                        rs.getDate("EndDate"),
                        rs.getDouble("TotalAmount"),
                        rs.getString("BookingStatus"),
                        rs.getString("CustomerFirstName"),
                        rs.getString("CustomerLastName"),
                        rs.getString("EmployeeFirstName"),
                        rs.getString("EmployeeLastName"),
                        rs.getString("Insurance_Provider"),
                        rs.getString("Vehicle_Brand"),
                        rs.getString("Vehicle_Model"),
                        rs.getString("Licence_Plate")
                );

                JOptionPane.showMessageDialog(this, details, "Booking Details", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "No details found for the selected booking.");
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error fetching booking details: " + e.getMessage());
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_BtnDetailsActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManageBookingsJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManageBookingsJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManageBookingsJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManageBookingsJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new ManageBookingsJFrame(null).setVisible(true));

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnAdd;
    private javax.swing.JButton BtnBack;
    private javax.swing.JButton BtnDelete;
    private javax.swing.JButton BtnDetails;
    private javax.swing.JButton BtnEdit;
    private javax.swing.JTable TblBookings;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
